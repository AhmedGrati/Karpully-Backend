# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Email {
  id: Int
  sentDate: DateTime!
  emailType: EmailTypeEnum!
  sender: User!
  token: String!
  verificationToken: String!
  isExpired: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum EmailTypeEnum {
  CONFIRMATION
  RESET_PASSWORD
}

type Gov {
  id: Int
  govName: String!
  cities: [City!]!
}

type City {
  id: Int!
  cityName: String!
  gov: Gov!
  carpools: [Carpool!]!
}

type Submission {
  id: Float!
  status: String!
  owner: User!
  carpool: Carpool!
}

type Carpool {
  id: Float!
  departureDate: DateTime!
  nbrOfAvailablePlaces: Float!
  description: String!
  hasSmokePermission: Boolean!
  departureCity: City!
  destinationCity: City!
  owner: User!
  submissions: Submission!
}

type User {
  id: Int
  username: String!
  firstname: String!
  lastname: String!
  age: Float!
  rate: Float!
  email: String!
  localization: String!
  telNumber: String!
  authorities: [String!]
  roles: [UserRoleEnum!]!
  gender: Gender!
  isConfirmed: Boolean!
  sentEmails: [Email!]!
  carpools: [Carpool!]!
  submissions: Submission!
}

enum UserRoleEnum {
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
}

type TokenModel {
  access_token: String!
}

type Meta {
  itemCount: Float!
  currentPage: Float!
}

type PaginatedCarpool {
  items: [Carpool!]!
  meta: Meta!
}

type Query {
  findAll: [User!]!
  findOne(id: Float!): User!
  email(id: Int!): Email!
  findAllCarpools: [Carpool!]!
  findOneCarpool(id: Int!): Carpool!
  paginatedCarpool(where: Where!, paginationInput: PaginationInput!): PaginatedCarpool!
  findAllCities: [City!]!
  findOneCity(id: Int!): City!
  findCitiesByGov(govId: Int!): [City!]!
  findAllGovs: [Gov!]!
  findOneGov(id: Int!): Gov!
  submission(id: Int!): Submission!
}

input Where {
  departureDate: DateTime
  nbrOfAvailablePlaces: Float
  description: String
  hasSmokePermission: Boolean
  id: Int
}

input PaginationInput {
  page: Float!
  limit: Float!
  orderBy: OrderBy
}

enum OrderBy {
  ASC
  DESC
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  update(updateUserInput: UpdateUserInput!): User!
  remove(id: Float!): User!
  confirmEmail(emailVerificationInput: EmailVerificationInput!): Boolean!
  sendResetPasswordEmail(ResetPasswordEmailInput: ResetPasswordEmailInput!): Boolean!
  resetPassword(ResetPasswordInput: ResetPasswordInput!): Boolean!
  login(credentialsInput: CredentialsInput!): TokenModel!
  createCarpool(createCarpoolInput: CreateCarpoolInput!): Carpool!
  updateCarpool(updateCarpoolInput: UpdateCarpoolInput!): Carpool!
  removeCarpool(id: Int!): Carpool!
  restoreCarpool(id: Int!): Carpool!
  createCity(createCityInput: CreateCityInput!): City!
  updateCity(updateCityInput: UpdateCityInput!): City!
  removeCity(id: Int!): City!
  createGov(createGovInput: CreateGovInput!): Gov!
  updateGov(updateGovInput: UpdateGovInput!): Gov!
  removeGov(id: Int!): Gov!
  createSubmission(createSubmissionInput: CreateSubmissionInput!): Submission!
  updateSubmission(updateSubmissionInput: UpdateSubmissionInput!): Submission!
  removeSubmission(id: Int!): Submission!
}

input CreateUserInput {
  id: Int
  username: String!
  firstname: String!
  lastname: String!
  age: Float!
  rate: Float
  email: String!
  localization: String!
  telNumber: String!
  password: String!
  authorities: [String!]
  roles: [String!]
  gender: Float!
  resetToken: String
}

input UpdateUserInput {
  id: Int
  username: String
  firstname: String
  lastname: String
  age: Float
  rate: Float
  email: String
  localization: String
  telNumber: String
  password: String
  authorities: [String!]
  roles: [String!]
  gender: Float
  resetToken: String
}

input EmailVerificationInput {
  token: String!
  verificationToken: String!
  userId: Float!
}

input ResetPasswordEmailInput {
  email: String!
}

input ResetPasswordInput {
  token: String!
  verificationToken: String!
  email: String!
  password: String!
}

input CredentialsInput {
  username: String!
  password: String!
}

input CreateCarpoolInput {
  departureDate: DateTime!
  nbrOfAvailablePlaces: Float!
  description: String!
  hasSmokePermission: Boolean!
  departureCityId: Float!
  destinationCityId: Float!
}

input UpdateCarpoolInput {
  departureDate: DateTime
  nbrOfAvailablePlaces: Float
  description: String
  hasSmokePermission: Boolean
  departureCityId: Float
  destinationCityId: Float
  id: Int!
}

input CreateCityInput {
  cityName: String!
  govId: Float!
}

input UpdateCityInput {
  cityName: String
  govId: Float
  id: Int!
}

input CreateGovInput {
  govName: String!
}

input UpdateGovInput {
  govName: String
  id: Int!
}

input CreateSubmissionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSubmissionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}
